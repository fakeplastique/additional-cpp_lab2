#include <iostream>

#include <chrono>
#include <format>

/*template <class F>
void timeit(F &&f)
{
    auto time1 = chrono::system_clock::now();
    f();
    auto time2 = chrono::system_clock::now();
    auto tdiff = time2 - time1;
    if (tdiff > 100000ns)
        cout << format("{:%S}", tdiff) << endl;
    else
        cout << tdiff << endl;
}
*/

using namespace std;
template <class F>
auto timeit(F &&f, int repeat=1)
{
    auto time1 = chrono::system_clock::now();
    for (int i = 0; i < repeat; ++i)
        f();
    auto time2 = chrono::system_clock::now();
    auto tdiff = (time2 - time1) / repeat;
    if (tdiff > 100000ns)
        cout << format("{:%S}", tdiff) << endl;
    else
        cout << tdiff << endl;
    return tdiff;
}